version: '3.8'

networks:
  my_network:

services:
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "${PROMETHEUS_PORT}:${PROMETHEUS_PORT}"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    depends_on:
      - fastapi_app
    networks:
      - my_network
  grafana:
    image: grafana/grafana:latest
    ports:
      - "${GRAFANA_PORT}:${GRAFANA_PORT}"
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources      
    depends_on:
      - prometheus
    networks:
      - my_network
  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: uptime_kuma
    ports:
      - "${KUMA_PORT}:${KUMA_PORT}"
    volumes:
      - ./louislam/uptime-kuma-data:/app/data
    restart: unless-stopped
  fastapi_app:
    build: ./fastapi_app
    container_name: fastapi_app
    ports:
      - "8000:8000"
    restart: unless-stopped
    networks:
      - my_network
  postgres:
    image: postgres:14-alpine
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./postgres-config:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    container_name: postgresql
    networks:
      - my_network
volumes:
  db_data: 

